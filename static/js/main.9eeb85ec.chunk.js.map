{"version":3,"sources":["components/topBar/TopBar.js","components/sideBar/SideBar.js","components/headings/Headings.js","components/circle/CircleChart.js","components/filters/Filters.js","components/circle/CircleContainer.js","components/areaChartText/AreaChartText.js","components/main/Main.js","App.js","serviceWorker.js","index.js"],"names":["TopBar","className","icon","faServer","faDownload","faPrint","faQuestionCircle","faArrowAltCircleRight","SideBar","faThumbtack","faChartBar","faMailBulk","faShapes","faFileAlt","Headings","faGlobe","size","CircleChart","props","handleClick","e","clickedChart","document","querySelector","classList","remove","newChart","getElementById","target","id","add","state","optionsRadial","series","score","labels","title","text","name","align","style","color","fontSize","plotOptions","radialBar","dataLabels","showOn","offsetY","show","value","formatter","val","chart","offsetX","this","sample","updateChart","onClick","options","type","width","Component","Filters","faInfoCircle","CircleContainer","gaugeData","map","obj","index","key","AreaChartText","changeColor","clickedButton","chosenObject","Main","chosenObj","newAreaData","areaData","data","newScoreArray","newDateArray","item","push","date","setState","xaxis","categories","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","yaxis","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9eeb85ec.chunk.js","sourcesContent":["import React from 'react';\nimport './TopBar.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload, faPrint, faQuestionCircle, faArrowAltCircleRight, faServer } from '@fortawesome/free-solid-svg-icons';\n\nconst TopBar = () => {\n    return (\n        <nav className=\"topBar\">\n            <p>Diagnostic Tool</p>\n            <div>\n               <p>Logged in as General User </p>\n               <ul>\n                  <li>\n                     <button>\n                     <FontAwesomeIcon icon={faServer} />\n                     </button>\n                  </li>\n                  <li>\n                     <button>\n                     <FontAwesomeIcon icon={faDownload} />\n                     </button>\n                  </li>\n                  <li>\n                     <button>\n                     <FontAwesomeIcon icon={faPrint} />\n                     </button>\n                  </li>\n                  <li>\n                     <button>\n                     <FontAwesomeIcon icon={faQuestionCircle} />\n                     </button>\n                  </li>\n                  <li>\n                     <button>\n                     <FontAwesomeIcon icon={faArrowAltCircleRight} />\n                     </button>\n                  </li>\n               </ul>\n            </div>\n         </nav>\n    )\n}\n\nexport default TopBar;","import React from 'react';\nimport './SideBar.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbtack, faChartBar, faMailBulk, faShapes, faFileAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst SideBar = () => {\n    return (\n        <nav className=\"sideBar\">\n        <ul>\n        <li>\n           <button>\n           <FontAwesomeIcon icon={faThumbtack} />\n           </button>\n        </li>\n        <li>\n           <button>\n           <FontAwesomeIcon icon={faChartBar} />\n           </button>\n        </li>\n        <li>\n           <button>\n           <FontAwesomeIcon icon={faMailBulk} />\n           </button>\n        </li>\n        <li>\n           <button>\n           <FontAwesomeIcon icon={faShapes} />\n           </button>\n        </li>\n        <li>\n           <button>\n           <FontAwesomeIcon icon={faFileAlt} />\n           </button>\n        </li>\n        </ul>\n     </nav>\n    )\n}\n\nexport default SideBar;","import React from 'react';\nimport './Headings.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  faThumbtack, faGlobe } from '@fortawesome/free-solid-svg-icons';\n\nconst Headings = () => {\n    return (\n        <section className=\"headingWrapper\">\n            <h1>Performance Management</h1>\n            <div className=\"subHeadingWrapper\">\n               <div className=\"subHeading\">\n                  <FontAwesomeIcon icon={faGlobe} size=\"2x\" />\n                  <h2>Diagnostic Tool</h2>\n               </div>\n               <button>\n                  <FontAwesomeIcon icon={faThumbtack} />\n               </button>\n            </div>\n         </section>\n    )\n}\n\nexport default Headings;","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport './CircleChart.css';\n\nclass CircleChart extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      optionsRadial: {\n        series: [this.props.score],\n        labels: [\"N/A\"],\n        title: {\n          text: this.props.name,\n          align: \"center\",\n          style: {\n            color: \"#2d71bf\",\n            fontSize: \"18px\"\n          },\n        },\n        plotOptions: {\n          radialBar: {\n            dataLabels: {\n              showOn: \"always\",\n              name: {\n                offsetY: 20, //move labels under dataLabels\n                show: true,\n                color: \"#888\",\n                fontSize: \"13px\"\n              },\n              value: {\n                formatter: function(val) {\n                  return `${val}%`;\n                },\n                offsetY: -10, //move dataLabels on top of labels\n                color: \"#4e9ff3\",\n                fontSize: \"20px\",\n                show: true\n              }\n            }\n          }\n        },\n        chart: {\n          offsetX: -60,\n        }\n      },\n    }\n  }\n  \n  //function to change background color of chart\n  handleClick = (e) => {\n    const clickedChart = document.querySelector(\".clickedChart\");\n        if (clickedChart !== null) {\n            clickedChart.classList.remove(\"clickedChart\");\n        } \n\n        const newChart = document.getElementById(e.target.id);\n        if (newChart !== null) {\n          newChart.classList.add(\"clickedChart\");\n        }\n  }\n\n  render() {\n    const {name, sample, updateChart} = this.props;\n    return (\n      <div className=\"circle\" id={name} onClick={this.handleClick}>\n        \n        <Chart \n        options={this.state.optionsRadial} \n        series={this.state.optionsRadial.series} \n        type=\"radialBar\" \n        width=\"240\"\n        onClick={() => {updateChart(name)}}\n        />\n        \n        <p>Sample: {sample}</p>\n      </div>\n    );\n  }\n}\n\nexport default CircleChart;\n\n\n","import React from 'react';\nimport './Filters.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Filters = () => {\n    return (\n        <div className=\"filterWrapper\">\n            <h4>Filters</h4>\n            <div className=\"filterTextContainer\">\n                <div className=\"infoFlex\">\n                    <div className=\"square\"></div>\n                    <p>All CQA Results</p>\n                    <FontAwesomeIcon icon={faInfoCircle} />\n                </div>\n                <div className=\"infoFlex\">\n                    <div className=\"square\"></div>\n                    <p>CQAs with Closed Loop</p>\n                    <FontAwesomeIcon icon={faInfoCircle} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport CircleChart from './CircleChart';\nimport Filters from '../filters/Filters';\nimport './CircleContainer.css'\n\nclass CircleContainer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gaugeData:[\n        {\n           \"name\":\"Quality Score\",\n           \"score\":72,\n           \"vsly\":null,\n           \"sample\":133\n        },\n        {\n           \"name\":\"Basics\",\n           \"score\":71,\n           \"vsly\":null,\n           \"sample\":133\n        },\n        {\n          \"name\":\"Interaction\",\n          \"score\":68,\n          \"vsly\":null,\n          \"sample\":133\n       },\n       {\n          \"name\":\"Expertise\",\n          \"score\":70,\n          \"vsly\":null,\n          \"sample\":133\n       },\n       {\n          \"name\":\"Process\",\n          \"score\":75,\n          \"vsly\":null,\n          \"sample\":133\n       },\n       {\n          \"name\":\"Knowledge\",\n          \"score\":76,\n          \"vsly\":null,\n          \"sample\":133\n       }\n      ]\n      \n    }\n  }\n\n  render() {\n    return (\n      <div className=\"circleChartSection\">\n        <Filters />\n        <div className=\"circleChartContainer\">\n          {this.state.gaugeData.map((obj,index) => {\n            return (\n              <CircleChart \n            key={this.state.gaugeData[index].name}\n            score={this.state.gaugeData[index].score}\n            name={this.state.gaugeData[index].name}\n            sample={this.state.gaugeData[index].sample}\n            updateChart={this.props.updateChart}\n            />\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CircleContainer;\n","import React, { Component } from 'react';\nimport './AreaChartText.css';\n\nclass AreaChartText extends Component {\n    changeColor = (e) => {\n        const clickedButton = document.querySelector(\".clickedButton\");\n        if (clickedButton !== null) {\n            clickedButton.classList.remove(\"clickedButton\");\n        } \n\n        const newButton = document.getElementById(e.target.id);\n        newButton.classList.add(\"clickedButton\");\n    }\n    render() {\n        return (\n            <div className=\"areaText\">\n                <h3>{this.props.chosenObject} Trend</h3>\n                <ul>\n                <li>\n                    <button className=\"time\" id=\"day\" onClick={this.changeColor}>Day</button>\n                </li>\n                <li>\n                    <button className=\"time\" id=\"week\" onClick={this.changeColor}>Week</button>\n                </li>\n                <li>\n                    <button className=\"time\" id=\"month\" onClick={this.changeColor}>Month</button>\n                </li>\n                <li>\n                    <button className=\"time\" id=\"quarter\" onClick={this.changeColor}>Quarter</button>\n                </li>\n                <li>\n                    <button className=\"time\" id=\"half\" onClick={this.changeColor}>Half</button>\n                </li>\n                <li>\n                    <button className=\"time\" id=\"year\" onClick={this.changeColor}>Year</button>\n                </li>\n                </ul>\n            </div>\n        )\n    }\n}\nexport default AreaChartText;","import React, { Component } from 'react';\nimport TopBar from '../topBar/TopBar';\nimport SideBar from '../sideBar/SideBar';\nimport Headings from '../headings/Headings';\nimport CircleContainer from '../circle/CircleContainer';\nimport AreaChartText from '../areaChartText/AreaChartText';\nimport Chart from 'react-apexcharts';\n\nimport './Main.css';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //data\n      areaData: {\n        \"Quality Score\":[\n           {\n              \"date\":\"Apr\",\n              \"sample\":21,\n              \"score\":75,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"May\",\n              \"sample\":110,\n              \"score\":71,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jun\",\n              \"sample\":2,\n              \"score\":62,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jul\",\n              \"sample\":0,\n              \"score\":0,\n              \"vsly\":0\n           }\n        ],\n        \"Basics\":[\n           {\n              \"date\":\"Apr\",\n              \"sample\":29,\n              \"score\":78,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"May\",\n              \"sample\":66,\n              \"score\":62,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jun\",\n              \"sample\":2,\n              \"score\":42,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jul\",\n              \"sample\":51,\n              \"score\":63,\n              \"vsly\":0\n           }\n        ],\n        \"Interaction\":[\n           {\n              \"date\":\"Apr\",\n              \"sample\":54,\n              \"score\":92,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"May\",\n              \"sample\":110,\n              \"score\":43,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jun\",\n              \"sample\":2,\n              \"score\":34,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jul\",\n              \"sample\":0,\n              \"score\":0,\n              \"vsly\":0\n           }\n        ],\n        \"Expertise\":[\n           {\n              \"date\":\"Apr\",\n              \"sample\":29,\n              \"score\":88,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"May\",\n              \"sample\":55,\n              \"score\":61,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jun\",\n              \"sample\":26,\n              \"score\":35,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jul\",\n              \"sample\":121,\n              \"score\":46,\n              \"vsly\":0\n           }\n        ],\n        \"Process\":[\n           {\n              \"date\":\"Apr\",\n              \"sample\":31,\n              \"score\":85,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"May\",\n              \"sample\":66,\n              \"score\":77,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jun\",\n              \"sample\":23,\n              \"score\":57,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jul\",\n              \"sample\":0,\n              \"score\":0,\n              \"vsly\":0\n           }\n        ],\n        \"Knowledge\":[\n           {\n              \"date\":\"Apr\",\n              \"sample\":31,\n              \"score\":74,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"May\",\n              \"sample\":100,\n              \"score\":76,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jun\",\n              \"sample\":45,\n              \"score\":33,\n              \"vsly\":0\n           },\n           {\n              \"date\":\"Jul\",\n              \"sample\":110,\n              \"score\":89,\n              \"vsly\":0\n           }\n        ]\n     },\n\n     // trend name state\n     chosenObject:'', \n\n     //Area Chart states\n     options : {\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      xaxis: {\n        categories: []\n      },\n      yaxis: {\n         show: false,\n      }\n    },\n    series: [{\n        data: [],\n      }]\n\n  }\n}\n\n// componentDidMount() {\n//    const newAreaData = {...this.state.areaData};\n//       const newScoreArray = [];\n//       const newDateArray = [];\n//       newAreaData['Knowledge'].map((value) => {\n//          newScoreArray.push(value.score);\n//          newDateArray.push(value.date);\n//       });\n//       this.setState({\n//          scoreArray: newScoreArray,\n//          dateArray: newDateArray,\n//       })\n// }\n\nupdateChart = (chosenObj) => {\n   const newAreaData = {...this.state.areaData};\n   for (let data in newAreaData) {\n      if (data === chosenObj) {\n        const newScoreArray = [];\n        const newDateArray = [];\n         newAreaData[data].map(item => {\n            return (\n               newScoreArray.push(item.score)\n            && newDateArray.push(item.date)\n            )\n         });\n         \n         this.setState({\n            chosenObject: data,\n            options: {\n              ...this.state.options,\n              xaxis: {\n                ...this.state.options.xaxis,\n                categories: newDateArray\n              },\n              \n            },\n            series: [{\n              ...this.state.series,\n              data: newScoreArray\n            }]\n          })\n         \n      }\n   }\n}\n  render() {\n    return (\n      <main>\n         <TopBar />\n         <SideBar />\n         <Headings />\n         \n         <div className=\"wrapper\">\n            <div className=\"chartsContainer\">\n               <CircleContainer \n               updateChart={this.updateChart}/>\n               <div className=\"areaChart\">\n                 <AreaChartText chosenObject={this.state.chosenObject}/>\n                  <Chart \n                  options={this.state.options} \n                  series={this.state.series}  \n                  type=\"area\" \n                  height=\"250\" \n                  width=\"500\"\n                  />\n               </div>\n            </div>\n         </div>\n\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, {Component} from 'react';\nimport Main from './components/main/Main.js';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          <Main />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}